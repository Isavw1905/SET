import pygame
import random
class card:
    def __init__(self, colour, symbol, shading, number):
        self.colour = colour #colour on card (green, purple, red)
        self.symbol = symbol #symbol on card (diamond, oval, squiggle)
        self.shading = shading #shading on card (empty, filled, shaded)
        self.number = number #number on card (1, 2, 3)
        
    def __str__(self):
        return f"{self.colour}{self.symbol}{self.shading}{self.number}"
    
    def check_set(nest_list):
        for i in range(0, 3):
            for j in range(0, 4):
                if nest_list[i][j] == nest_list[(i+1)%3][j] and nest_list[i][j] != nest_list[i-1][j]:
                    return False
                    break
        return True
    def pick_set(open_cards):
        n = len(open_cards)
        for i in range(0, n-2):
            for j in range(1, n-1):
                for k in range(2, n):
                    if i != j != k and card.check_set([open_cards[i], open_cards[j], open_cards[k]]) == True:
                        return [open_cards[i], open_cards[j], open_cards[k]]
                        break
        return False
    def random(nest_list):
        n = len(nest_list)-1
        index = random.randint(0, n)
        card = nest_list[index]
        nest_list.remove(card)
        return card

# Initialize Pygame
pygame.init()

stack = []
for i in range(1, 4):
    for j in range(1, 4):
        for k in range(1, 4):
            for l in range(1, 4):
                stack.append([i, j, k, l])
dict_colour = {1:'green', 2:'purple', 3:'red'}
dict_symbol = {1:'diamond', 2:'oval', 3:'squiggle'}
dict_shading = {1:'empty', 2:'filled', 3:'shaded'}
stack_name = []
for i in range(1, 4):
    for j in range(1, 4):
        for k in range(1, 4):
            for l in range(1, 4):
                stack_name.append(dict_colour[i] + dict_symbol[j] + dict_shading[k] + str(l))
                
# Set up the display
screen = pygame.display.set_mode((1200, 800))
pygame.display.set_caption("Detect Screen Press")

class Button():
    def __init__(self, x, y, image, scale):
        width = image.get_width()
        height = image.get_height()
        self.image = pygame.transform.scale(image, (int(width * scale), int(height * scale)))
        self.rect = self. image.get_rect()
        self.rect.topleft = (x, y)
        self.clicked = False
        
    def draw(self):
        action = False
        pos = pygame.mouse.get_pos()
        
        if self.rect.collidepoint(pos):
            if pygame.mouse.get_pressed()[0] == 1 and self.clicked == False:
                self.clicked = True
                action = True
                
        if pygame.mouse.get_pressed()[0] == 0:
            self.clicked = False
            
        screen.blit(self.image, (self.rect.x, self.rect.y))
        return action
    
#load images
card1_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card2_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card3_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card4_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card5_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card6_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card7_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card8_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card9_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card10_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card11_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card12_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card13_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card14_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
card15_img = pygame.image.load('kaarten/' + card.random(stack_name) + '.gif').convert_alpha()
#create button
card1_button = Button(65, 65, card1_img, 1)
card2_button = Button(65, 300, card2_img, 1)
card3_button = Button(65, 525, card3_img, 1)
card4_button = Button(200, 65, card4_img, 1)
card5_button = Button(200, 300, card5_img, 1)
card6_button = Button(200, 525, card6_img, 1)
card7_button = Button(335, 65, card7_img, 1)
card8_button = Button(335, 300, card8_img, 1)
card9_button = Button(335, 525, card9_img, 1)
card10_button = Button(470, 65, card10_img, 1)
card11_button = Button(470, 300, card11_img, 1)
card12_button = Button(470, 525, card12_img, 1)
card13_button = Button(605, 65, card13_img, 1)
card14_button = Button(605, 300, card14_img, 1)
card15_button = Button(605, 525, card15_img, 1)

# Main loop
running = True
while running:
    # Fill the screen with a color (optional)
    screen.fill((102, 50, 152))
    
    if card1_button.draw():
        card1_button = Button(60, 55, card1_img, 1.1)
    if card2_button.draw():
        print('clicked card2')
    if card3_button.draw():
        print('clicked card3')
    if card4_button.draw():
        print('clicked card4')
    if card5_button.draw():
        print('clicked card5')
    if card6_button.draw():
        print('clicked card6')
    if card7_button.draw():
        print('clicked card7')
    if card8_button.draw():
        print('clicked card8')
    if card9_button.draw():
        print('clicked card9')
    if card10_button.draw():
        print('clicked card10')
    if card11_button.draw():
        print('clicked card11')
    if card12_button.draw():
        print('clicked card12')
    if card13_button.draw():
        print('clicked card13')
    if card14_button.draw():
        print('clicked card14')
    if card15_button.draw():
        print('clicked card15')
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Update the display
    pygame.display.flip()

# Quit Pygame
pygame.quit()
